# Generated by Django 5.2.1 on 2025-07-07 13:44

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clients', '0001_initial'),
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CreditNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_note_number', models.CharField(blank=True, help_text='Numéro de la note de crédit (sera auto-généré si laissé vide)', max_length=50, unique=True)),
                ('issue_date', models.DateField(default=django.utils.timezone.now, help_text="Date d'émission de la note de crédit")),
                ('status', models.CharField(choices=[('Brouillon', 'Brouillon'), ('Finalisée', 'Finalisée')], default='Brouillon', max_length=10)),
                ('vat_percentage', models.DecimalField(decimal_places=2, default=21.0, max_digits=5)),
                ('total_amount_htva', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10)),
                ('total_amount_ttc', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10)),
                ('notes', models.TextField(blank=True, help_text='Raison de la note de crédit ou autres notes', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('public_token', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Token d’accès public sécurisé pour cette note de crédit', unique=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='credit_notes', to='clients.client')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_notes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Note de Crédit',
                'verbose_name_plural': 'Notes de Crédit',
                'ordering': ['-issue_date', '-credit_note_number'],
            },
        ),
        migrations.CreateModel(
            name='CreditNoteItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit_price_htva', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_line_htva', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('credit_note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='documents.creditnote')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.product')),
            ],
            options={
                'verbose_name': 'Ligne de Note de Crédit',
                'verbose_name_plural': 'Lignes de Note de Crédit',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(blank=True, help_text='Numéro de facture unique par utilisateur (sera auto-généré si laissé vide)', max_length=50)),
                ('issue_date', models.DateField(default=django.utils.timezone.now, help_text="Date d'émission de la facture")),
                ('due_date', models.DateField(help_text="Date d'échéance de la facture")),
                ('status', models.CharField(choices=[('Brouillon', 'Brouillon'), ('Envoyée', 'Envoyée'), ('Payée', 'Payée'), ('En retard', 'En retard'), ('Annulée', 'Annulée')], default='Brouillon', help_text='Statut actuel de la facture', max_length=10)),
                ('vat_percentage', models.DecimalField(decimal_places=2, default=21.0, help_text='Pourcentage de TVA appliqué (ex: 21.00)', max_digits=5)),
                ('total_amount_htva', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Montant total HTVA (calculé)', max_digits=10)),
                ('total_amount_ttc', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Montant total TTC (calculé)', max_digits=10)),
                ('notes', models.TextField(blank=True, help_text='Notes ou termes additionnels', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('public_token', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Token d’accès public sécurisé pour cette facture', unique=True)),
                ('client', models.ForeignKey(help_text='Client associé à cette facture', on_delete=django.db.models.deletion.PROTECT, related_name='invoices', to='clients.client')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-issue_date', '-invoice_number'],
                'unique_together': {('user', 'invoice_number')},
            },
        ),
        migrations.AddField(
            model_name='creditnote',
            name='original_invoice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='credit_notes', to='documents.invoice'),
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit_price_htva', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_line_htva', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('invoice', models.ForeignKey(help_text='Facture à laquelle cet article appartient', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='documents.invoice')),
                ('product', models.ForeignKey(blank=True, help_text='Produit/Service facturé (optionnel)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.product')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant payé')),
                ('payment_date', models.DateField(default=django.utils.timezone.now, verbose_name='Date du paiement')),
                ('payment_method', models.CharField(choices=[('Virement', 'Virement bancaire'), ('Carte', 'Carte de crédit'), ('Especes', 'Espèces'), ('Autre', 'Autre')], default='Virement', max_length=20, verbose_name='Méthode de paiement')),
                ('reference', models.CharField(blank=True, max_length=255, null=True, verbose_name='Référence ou note')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('invoice', models.ForeignKey(help_text='Facture associée à ce paiement', on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='documents.invoice')),
            ],
            options={
                'verbose_name': 'Paiement',
                'verbose_name_plural': 'Paiements',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quote_number', models.CharField(blank=True, help_text='Numéro de devis unique par utilisateur (sera auto-généré si laissé vide)', max_length=50)),
                ('issue_date', models.DateField(default=django.utils.timezone.now, help_text="Date d'émission du devis")),
                ('expiry_date', models.DateField(help_text="Date d'expiration du devis (validité)")),
                ('status', models.CharField(choices=[('Brouillon', 'Brouillon'), ('Envoyé', 'Envoyé'), ('Accepté', 'Accepté'), ('Refusé', 'Refusé'), ('Expiré', 'Expiré'), ('Converti', 'Converti en Facture')], default='Brouillon', help_text='Statut actuel du devis', max_length=10)),
                ('vat_percentage', models.DecimalField(decimal_places=2, default=21.0, help_text='Pourcentage de TVA appliqué (ex: 21.00)', max_digits=5)),
                ('total_amount_htva', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Montant total HTVA (calculé)', max_digits=10)),
                ('total_amount_ttc', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Montant total TTC (calculé)', max_digits=10)),
                ('notes', models.TextField(blank=True, help_text='Termes ou notes spécifiques au devis', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('public_token', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Token d’accès public sécurisé pour ce devis', unique=True)),
                ('client', models.ForeignKey(help_text='Client associé à ce devis', on_delete=django.db.models.deletion.PROTECT, related_name='quotes', to='clients.client')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Devis',
                'verbose_name_plural': 'Devis',
                'ordering': ['-issue_date', '-quote_number'],
                'unique_together': {('user', 'quote_number')},
            },
        ),
        migrations.CreateModel(
            name='QuoteItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit_price_htva', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_line_htva', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('product', models.ForeignKey(blank=True, help_text='Produit/Service proposé (optionnel)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.product')),
                ('quote', models.ForeignKey(help_text='Devis auquel cet article appartient', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='documents.quote')),
            ],
            options={
                'verbose_name': 'Ligne de Devis',
                'verbose_name_plural': 'Lignes de Devis',
                'ordering': ['id'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='creditnote',
            unique_together={('user', 'credit_note_number')},
        ),
    ]
